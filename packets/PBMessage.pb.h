// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PBMessage.proto

#ifndef PROTOBUF_PBMessage_2eproto__INCLUDED
#define PROTOBUF_PBMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtobufPacket {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PBMessage_2eproto();
void protobuf_AssignDesc_PBMessage_2eproto();
void protobuf_ShutdownFile_PBMessage_2eproto();

class CG_LOGIN;
class CG_MOVE;
class GC_MOVE_RET;

// ===================================================================

class CG_LOGIN : public ::google::protobuf::Message {
 public:
  CG_LOGIN();
  virtual ~CG_LOGIN();

  CG_LOGIN(const CG_LOGIN& from);

  inline CG_LOGIN& operator=(const CG_LOGIN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_LOGIN& default_instance();

  void Swap(CG_LOGIN* other);

  // implements Message ----------------------------------------------

  CG_LOGIN* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_LOGIN& from);
  void MergeFrom(const CG_LOGIN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required string account = 2;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 2;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required string password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:ProtobufPacket.CG_LOGIN)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* account_;
  ::std::string* password_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_LOGIN* default_instance_;
};
// -------------------------------------------------------------------

class CG_MOVE : public ::google::protobuf::Message {
 public:
  CG_MOVE();
  virtual ~CG_MOVE();

  CG_MOVE(const CG_MOVE& from);

  inline CG_MOVE& operator=(const CG_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_MOVE& default_instance();

  void Swap(CG_MOVE* other);

  // implements Message ----------------------------------------------

  CG_MOVE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_MOVE& from);
  void MergeFrom(const CG_MOVE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float posx = 1;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 1;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posy = 2;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosyFieldNumber = 2;
  inline float posy() const;
  inline void set_posy(float value);

  // @@protoc_insertion_point(class_scope:ProtobufPacket.CG_MOVE)
 private:
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float posx_;
  float posy_;
  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_MOVE* default_instance_;
};
// -------------------------------------------------------------------

class GC_MOVE_RET : public ::google::protobuf::Message {
 public:
  GC_MOVE_RET();
  virtual ~GC_MOVE_RET();

  GC_MOVE_RET(const GC_MOVE_RET& from);

  inline GC_MOVE_RET& operator=(const GC_MOVE_RET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_MOVE_RET& default_instance();

  void Swap(GC_MOVE_RET* other);

  // implements Message ----------------------------------------------

  GC_MOVE_RET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_MOVE_RET& from);
  void MergeFrom(const GC_MOVE_RET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float posx = 1;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 1;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posy = 2;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosyFieldNumber = 2;
  inline float posy() const;
  inline void set_posy(float value);

  // @@protoc_insertion_point(class_scope:ProtobufPacket.GC_MOVE_RET)
 private:
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float posx_;
  float posy_;
  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_MOVE_RET* default_instance_;
};
// ===================================================================


// ===================================================================

// CG_LOGIN

// required int32 id = 1;
inline bool CG_LOGIN::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_LOGIN::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_LOGIN::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_LOGIN::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CG_LOGIN::id() const {
  // @@protoc_insertion_point(field_get:ProtobufPacket.CG_LOGIN.id)
  return id_;
}
inline void CG_LOGIN::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPacket.CG_LOGIN.id)
}

// required string account = 2;
inline bool CG_LOGIN::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CG_LOGIN::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CG_LOGIN::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CG_LOGIN::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& CG_LOGIN::account() const {
  // @@protoc_insertion_point(field_get:ProtobufPacket.CG_LOGIN.account)
  return *account_;
}
inline void CG_LOGIN::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:ProtobufPacket.CG_LOGIN.account)
}
inline void CG_LOGIN::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtobufPacket.CG_LOGIN.account)
}
inline void CG_LOGIN::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtobufPacket.CG_LOGIN.account)
}
inline ::std::string* CG_LOGIN::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufPacket.CG_LOGIN.account)
  return account_;
}
inline ::std::string* CG_LOGIN::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufPacket.CG_LOGIN.account)
}

// required string password = 3;
inline bool CG_LOGIN::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CG_LOGIN::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CG_LOGIN::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CG_LOGIN::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& CG_LOGIN::password() const {
  // @@protoc_insertion_point(field_get:ProtobufPacket.CG_LOGIN.password)
  return *password_;
}
inline void CG_LOGIN::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:ProtobufPacket.CG_LOGIN.password)
}
inline void CG_LOGIN::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtobufPacket.CG_LOGIN.password)
}
inline void CG_LOGIN::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtobufPacket.CG_LOGIN.password)
}
inline ::std::string* CG_LOGIN::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufPacket.CG_LOGIN.password)
  return password_;
}
inline ::std::string* CG_LOGIN::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufPacket.CG_LOGIN.password)
}

// -------------------------------------------------------------------

// CG_MOVE

// required float posx = 1;
inline bool CG_MOVE::has_posx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_MOVE::set_has_posx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_MOVE::clear_has_posx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_MOVE::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float CG_MOVE::posx() const {
  // @@protoc_insertion_point(field_get:ProtobufPacket.CG_MOVE.posx)
  return posx_;
}
inline void CG_MOVE::set_posx(float value) {
  set_has_posx();
  posx_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPacket.CG_MOVE.posx)
}

// required float posy = 2;
inline bool CG_MOVE::has_posy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CG_MOVE::set_has_posy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CG_MOVE::clear_has_posy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CG_MOVE::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float CG_MOVE::posy() const {
  // @@protoc_insertion_point(field_get:ProtobufPacket.CG_MOVE.posy)
  return posy_;
}
inline void CG_MOVE::set_posy(float value) {
  set_has_posy();
  posy_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPacket.CG_MOVE.posy)
}

// -------------------------------------------------------------------

// GC_MOVE_RET

// required float posx = 1;
inline bool GC_MOVE_RET::has_posx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_MOVE_RET::set_has_posx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_MOVE_RET::clear_has_posx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_MOVE_RET::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float GC_MOVE_RET::posx() const {
  // @@protoc_insertion_point(field_get:ProtobufPacket.GC_MOVE_RET.posx)
  return posx_;
}
inline void GC_MOVE_RET::set_posx(float value) {
  set_has_posx();
  posx_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPacket.GC_MOVE_RET.posx)
}

// required float posy = 2;
inline bool GC_MOVE_RET::has_posy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_MOVE_RET::set_has_posy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_MOVE_RET::clear_has_posy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_MOVE_RET::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float GC_MOVE_RET::posy() const {
  // @@protoc_insertion_point(field_get:ProtobufPacket.GC_MOVE_RET.posy)
  return posy_;
}
inline void GC_MOVE_RET::set_posy(float value) {
  set_has_posy();
  posy_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPacket.GC_MOVE_RET.posy)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtobufPacket

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PBMessage_2eproto__INCLUDED
